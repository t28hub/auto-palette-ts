name: Release

on:
  workflow_dispatch:

concurrency:
  group: release
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        run: corepack enable

      - name: Set up Node.js with the specified version
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org/
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check the syntax of the code
        run: pnpm run lint

      - name: Run the unit and e2e tests
        run: pnpm run test:e2e:install && pnpm run test

  release:
    runs-on: ubuntu-latest
    needs: check
    timeout-minutes: 10
    steps:
      - name: Create a token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false

      - name: Set up pnpm
        run: corepack enable

      - name: Set up Node.js with the specified version
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org/
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the project
        run: pnpm run build

      - name: Publish the built package to npm
        run: pnpm run release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
